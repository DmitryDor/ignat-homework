{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p2-homeworks/h1/HW1.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Affair","props","className","styles","title","child","name","onClick","deleteAffairCallback","_id","delButton","Affairs","mappedAffairs","data","map","a","key","affair","setFilter","filter","button","allButton","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filteredAffairs","t","filterAffairs","root","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","inputClass","s","greeting","value","onChange","inputGeneralClass","onKeyPress","messageError","GreetingContainer","users","addUserCallback","setName","setError","trim","length","alert","e","currentTarget","HW3","setUsers","parentsClass","newUser","v1","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","finalClassName","red","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","Header","Routes","HW5","messageData","Message","wrapper","image","src","avatar","alt","photo","message","messageValue","time","HW1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4659da6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Affairs_root__3ngNR\",\"button\":\"Affairs_button__3DqcK\",\"allButton\":\"Affairs_allButton__QwWQb\",\"title\":\"Affairs_title__1-A_a\",\"name\":\"Affairs_name__2IREc\",\"delButton\":\"Affairs_delButton__1U4Bo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"parentsClass\":\"Greeting_parentsClass__1mFDb\",\"error\":\"Greeting_error___vXV-\",\"messageError\":\"Greeting_messageError__2c8z8\",\"greeting\":\"Greeting_greeting__1rvwb\",\"totalUsers\":\"Greeting_totalUsers__1MZJ4\",\"inputGeneralClass\":\"Greeting_inputGeneralClass__PqefP\",\"button\":\"Greeting_button__3Hr7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__WSTAz\",\"image\":\"Message_image__3ubSr\",\"photo\":\"Message_photo__12WkP\",\"message\":\"Message_message__1KWP4\",\"name\":\"Message_name__2jrEq\",\"messageValue\":\"Message_messageValue__2Ksdp\",\"time\":\"Message_time__1pGDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__yJbNx\",\"errorInput\":\"SuperInputText_errorInput__bzXoG\",\"error\":\"SuperInputText_error__2D93r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__32FMD\",\"red\":\"SuperButton_red__1JDRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3T-nP\",\"spanClassName\":\"SuperCheckbox_spanClassName__9fYxp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__KrqAK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__uyo-0\",\"column\":\"HW4_column__2IvMq\"};","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\nimport styles from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    _id: number\r\n    affair: AffairType\r\n    deleteAffairCallback: (_id: number) => void\r\n    name: string\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props._id)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.title}>\r\n                <div className={styles.child}>\r\n                    <div className={styles.name}>{props.name}</div>\r\n                    <button onClick={deleteCallback} className={styles.delButton}>X</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Affair;\r\n","import React from \"react\"\r\nimport Affair from \"./Affair\"\r\nimport {AffairType, FilterType} from \"./HW2\"\r\nimport styles from './Affairs.module.css'\r\n\r\n\r\ntype AffairsPropsType = {\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    filter: FilterType\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair\r\n            _id={a._id}\r\n            key={a._id}\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n            name={a.name}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    }\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}\r\n                    className={`${props.filter === 'all' ? styles.button : ''} ${styles.allButton}`}>All\r\n            </button>\r\n            <button onClick={setHigh}\r\n                    className={`${props.filter === 'high' ? styles.button : ''} ${styles.allButton}`}>High\r\n            </button>\r\n            <button onClick={setMiddle}\r\n                    className={`${props.filter === 'middle' ? styles.button : ''} ${styles.allButton}`}>Middle\r\n            </button>\r\n            <button onClick={setLow}\r\n                    className={`${props.filter === 'low' ? styles.button : ''} ${styles.allButton}`}>Low\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from \"react\"\r\nimport Affairs from \"./Affairs\"\r\nimport styles from './Affairs.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = 'all' | 'high' | 'low' | 'middle'\r\nexport type FilterType = \"all\" | AffairPriorityType\r\n\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: AffairPriorityType\r\n}\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: \"React\", priority: 'high'},\r\n    {_id: 2, name: \"anime\", priority: 'low'},\r\n    {_id: 3, name: \"games\", priority: 'low'},\r\n    {_id: 4, name: \"work\", priority: 'high'},\r\n    {_id: 5, name: \"html & css\", priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\r\n    if (filter === 'all') return affairs;\r\n    if (filter === 'high') return affairs.filter(t => t.priority === 'high')\r\n    if (filter === 'low') return affairs.filter(t => t.priority === 'low')\r\n    if (filter === 'middle') return affairs.filter(t => t.priority === 'middle')\r\n\r\n    return affairs\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\r\n    return affairs.filter(a => a._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\r\n    const [filter, setFilter] = useState<FilterType>(\"all\")\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n            <div className={styles.root}>\r\n                <Affairs\r\n                    data={filteredAffairs}\r\n                    setFilter={setFilter}\r\n                    deleteAffairCallback={deleteAffairCallback}\r\n                    filter={filter}\r\n                />\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : '';\r\n\r\n    return (\r\n        <div className={s.greeting}>\r\n            <div>\r\n                <input value={name} onChange={setNameCallback} className={`${inputClass} ${s.inputGeneralClass}`} onKeyPress={onKeyPressHandler}/>\r\n                <button onClick={addUser} className={s.button}>add</button>\r\n            </div>\r\n            <div className={s.messageError}>{error}</div>\r\n            <div className={s.totalUsers}>Number of users: {totalUsers}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {useState, KeyboardEvent, ChangeEvent} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>\r\n    addUserCallback: (name: string) => void\r\n}\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    const [name, setName] = useState<string>(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n    const addUser = () => {\r\n        if (name.trim().length > 2) {\r\n            addUserCallback(name)\r\n            setName('')\r\n            alert(`Hello  ${name}!`)\r\n        } else {\r\n            setError(`The name can't be shorter than two letters, please enter the correct name`)\r\n        }\r\n    };\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError('')\r\n        if (e.key === 'Enter') {\r\n            addUser()\r\n        }\r\n    }\r\n\r\n    const totalUsers = users.length\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onKeyPressHandler={onKeyPressHandler}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\n\r\nimport s from './Greeting.module.css'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n\r\n    const addUserCallback = (name: string) => {\r\n        const newUser = {_id: v1(), name}\r\n        setUsers([newUser, ...users]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n            <div className={s.parentsClass}>\r\n                <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    setError?: (error: string) => void\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName, setError,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        setError && setError('')\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    // const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    name?: string\r\n    error?: string\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        error, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n    const finalClassName = `${error ? s.red : s.default} `;\r\n\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n\r\n    const [text, setText] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>('')\r\n\r\n\r\n    const showAlert = () => {\r\n        if (text) {\r\n            alert(text)\r\n            setError('')\r\n            setText('')\r\n        } else {\r\n            setError('введите текст')\r\n            alert(\"введите текст...\");\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    setError={setError}\r\n                />\r\n\r\n                <SuperButton\r\n                    error={error}\r\n                    onClick={showAlert}\r\n                >\r\n                    Push {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n            <hr/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            {/*<Switch>*/}\r\n\r\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n            {/*<Route path={\"/\"} exact render={() => <Redirect to={PRE_JUNIOR}/>}/>*/}\r\n\r\n            {/*<Route path={PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            {/*</Switch>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            {/*<HashRouter>*/}\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            {/*</HashRouter>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport styles from './Message.module.css'\r\n\r\nconst messageData = {\r\n    avatar: \"https://avatarko.ru/img/kartinka/2/zhivotnye_kot_prikol_1767.jpg\",\r\n    name: \"Artem\",\r\n    message: \"Npm start нажимал?\",\r\n    time: \"22:00\",\r\n};\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MessageDataType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nexport const Message = (props: MessageDataType) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.image}>\r\n                <img src={props.avatar} alt=\"I'm\" className={styles.photo}/>\r\n            </div>\r\n            <div className={styles.message}>\r\n                <div className={styles.name}>{props.name}</div>\r\n                <div className={styles.messageValue}>{props.message}</div>\r\n                <div className={styles.time}>{props.time}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\n// import HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}